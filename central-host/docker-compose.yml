version: '3'

services:
  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-proxy
    environment:
      - DO_AUTH_TOKEN=${DO_AUTH_TOKEN}
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/:/etc/traefik/:ro

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefikproxy.${DOMAIN}`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PW}"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefikproxy.${DOMAIN}`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=dns"
      - "traefik.http.routers.traefik-secure.service=api@internal"

  portainer:
    image: portainer/portainer-ee:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik-proxy
    ports:
      - 8000:8000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
    #  - "traefik.http.routers.portainer.entrypoints=http"
    #  - "traefik.http.routers.portainer.rule=Host(`services.${DOMAIN}`)"
      - "traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.portainer.middlewares=portainer-https-redirect"
      - "traefik.http.routers.portainer-secure.entrypoints=https"
      - "traefik.http.routers.portainer-secure.rule=Host(`services.${DOMAIN}`)"
      - "traefik.http.routers.portainer-secure.tls=true"
      - "traefik.http.routers.portainer-secure.tls.certresolver=dns"
      - "traefik.http.routers.portainer-secure.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.docker.network=traefik-proxy"

  consul-server:
    image: hashicorp/consul:1.11.2
    container_name: consul-server
    restart: always
    volumes:
     - ./consul-server/server.json:/consul/config/server.json:ro
     - ./certs/:/consul/config/certs/:ro
    networks:
      - traefik-proxy
  #  ports:
  #    - "8500:8500"
  #    - "8600:8600/tcp"
  #    - "8600:8600/udp"  
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.consul-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.consul.middlewares=consul-https-redirect"
      - "traefik.http.routers.consul-secure.entrypoints=https"
      - "traefik.http.middlewares.consul-auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PW}"
      - "traefik.http.routers.consul-secure.rule=Host(`consul.${DOMAIN}`)"
      - "traefik.http.routers.consul-secure.tls=true"
      - "traefik.http.routers.consul-secure.tls.certresolver=dns"
      - "traefik.http.routers.consul-secure.service=consul"
      - "traefik.http.services.consul.loadbalancer.server.port=8500"
      - "traefik.docker.network=traefik-proxy"

#  wireguard-tunnel-server:
#    image: ghcr.io/digitallyrefined/docker-wireguard-tunnel:v3
#    container_name: wireguard-tunnel-server
#    environment:
#      # Update to your domain
#      - DOMAIN=wireguard-tunnel.christerrile.com
#      # Number of peers to auto generate config for
#      - PEERS=1
#      # Services to expose format (comma-separated)
#      # SERVICES=peer-id:peer-container-name:peer-container-port:expose-port-as
##      - SERVICES=peer1:radarr:7878:7878,peer1:sonarr:8989:8989
#    cap_add:
#      - NET_ADMIN
#    volumes:
#      - wireguard:/etc/wireguard
#    restart: unless-stopped
#    ports:
#      - '51820:51820/udp'
#    networks:
#      - traefik-proxy
#    labels:
#      traefik.enable: true
#      traefik.http.routers.radarr.entrypoints: web,websecure
#      traefik.http.routers.radarr.rule: Host(`radarr.${DOMAIN}`) # Update to your domain
#      traefik.http.routers.radarr.tls: true
#      traefik.http.routers.radarr.tls.certresolver: dns
#      traefik.http.services.radarr.loadbalancer.server.port: 7878
#
#      traefik.http.routers.sonarr.entrypoints: web,websecure
#      traefik.http.routers.sonarr.rule: Host(`sonarr.${DOMAIN}`) # Update to your domain
#      traefik.http.routers.sonarr.tls: true
#      traefik.http.routers.sonarr.tls.certresolver: dns
#      traefik.http.services.sonarr.loadbalancer.server.port: 8989

  wg-easy:
    environment:
      # Change Language:
      # (Supports: en, ua, ru, tr, no, pl, fr, de, ca, es, ko, vi, nl, is, pt, chs, cht, it, th, hi)
      - LANG=en
      # ⚠️ Required:
      # Change this to your host's public address
      - WG_HOST=wireguard.${DOMAIN}

      # Optional:
      # - PASSWORD_HASH=$$2y$$10$$hBCoykrB95WSzuV4fafBzOHWKu9sbyVa34GJr8VV5R/pIelfEMYyG (needs double $$, hash of 'foobar123'; see "How_to_generate_an_bcrypt_hash.md" for generate the hash)
      # - PORT=51821
      # - WG_PORT=51820
      # - WG_CONFIG_PORT=92820
      # - WG_DEFAULT_ADDRESS=10.8.0.x
      # - WG_DEFAULT_DNS=1.1.1.1
      # - WG_MTU=1420
      # - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24
      # - WG_PERSISTENT_KEEPALIVE=25
      # - WG_PRE_UP=echo "Pre Up" > /etc/wireguard/pre-up.txt
      # - WG_POST_UP=echo "Post Up" > /etc/wireguard/post-up.txt
      # - WG_PRE_DOWN=echo "Pre Down" > /etc/wireguard/pre-down.txt
      # - WG_POST_DOWN=echo "Post Down" > /etc/wireguard/post-down.txt
      # - UI_TRAFFIC_STATS=true
      # - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)
      # - WG_ENABLE_ONE_TIME_LINKS=true
      # - UI_ENABLE_SORT_CLIENTS=true
      # - WG_ENABLE_EXPIRES_TIME=true
      # - ENABLE_PROMETHEUS_METRICS=false
      # - PROMETHEUS_METRICS_PASSWORD=$$2a$$12$$vkvKpeEAHD78gasyawIod.1leBMKg8sBwKW.pQyNsq78bXV3INf2G # (needs double $$, hash of 'prometheus_password'; see "How_to_generate_an_bcrypt_hash.md" for generate the hash)

    image: ghcr.io/wg-easy/wg-easy
    container_name: wg-easy
    volumes:
      - etc_wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    networks:
      - traefik-proxy
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      # - NET_RAW # ⚠️ Uncomment if using Podman
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.wg-easy-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.wg-easy.middlewares=wg-easy-https-redirect"
      - "traefik.http.routers.wg-easy-secure.entrypoints=https"
      - "traefik.http.routers.wg-easy-secure.rule=Host(`wireguard.${DOMAIN}`)"
      - "traefik.http.routers.wg-easy-secure.tls=true"
      - "traefik.http.routers.wg-easy-secure.tls.certresolver=dns"
      - "traefik.http.routers.wg-easy-secure.service=wg-easy"
      - "traefik.http.services.wg-easy.loadbalancer.server.port=51821"
      - "traefik.docker.network=traefik-proxy"

      - "traefik.http.routers.metabase.entrypoints=https"
      - "traefik.http.routers.metabase.rule=Host(`metabase.${DOMAIN}`)" # Update to your domain
      - "traefik.http.routers.metabase.tls=true"
      - "traefik.http.routers.metabase.tls.certresolver=dns"
      - "traefik.http.services.metabase.loadbalancer.server.port=3000"

networks:
  traefik-proxy:
    external: true

volumes:
  portainer_data:
  wireguard:
  etc_wireguard: